<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title></title>
  
  
  <link href="http://af1ash.github.io/atom.xml" rel="self"/>
  
  <link href="http://af1ash.github.io/"/>
  <updated>2024-08-18T05:09:59.678Z</updated>
  <id>http://af1ash.github.io/</id>
  
  <author>
    <name>Af1ash</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>应用部署</title>
    <link href="http://af1ash.github.io/2024/08/18/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0/"/>
    <id>http://af1ash.github.io/2024/08/18/%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E6%8E%A5%E5%8F%A3%E5%AE%9E%E7%8E%B0/</id>
    <published>2024-08-18T05:09:24.366Z</published>
    <updated>2024-08-18T05:09:59.678Z</updated>
    
    <content type="html"><![CDATA[<p>基于Fastapi实现三种不同的文件上传接口</p><p>第一种是基于Form将文件全部读取成byte传输到服务端，客户端请求需要包装报文。</p><p>第二种是基于Form使用UploadFile类实现，调用时需要创建文件对象，不需要读取整个文件，服务端可以得到文件名称等原始信息。客户端请求需要包装报文。</p><p>第三种是不使用Form，请求的body为上传文件的字节码，接口实现需要以request为参数，手动获取body内容并保存。</p><h1 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h1><p>接口实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/files/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">create_file</span>(<span class="params">file: <span class="built_in">bytes</span> = File(<span class="params">...</span>)</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;tmp&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(file)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;file_size&quot;</span>: <span class="built_in">len</span>(file)&#125;</span><br></pre></td></tr></table></figure><p>接口调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_files</span>():</span><br><span class="line">    url = <span class="string">&quot;http://127.0.0.1:8000/files&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test/cases/1.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        bin_data = f.read()</span><br><span class="line"></span><br><span class="line">    data: <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="built_in">bytes</span>] = &#123;<span class="string">&#x27;file&#x27;</span>: bin_data&#125;</span><br><span class="line"></span><br><span class="line">    r = requests.post(url=url, data=data, headers=header)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.content)</span><br></pre></td></tr></table></figure><h1 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h1><p>接口实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&quot;/uploadfile/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">create_upload_file</span>(<span class="params">file: UploadFile = File(<span class="params">...</span>), </span>):</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&quot;filename&quot;</span>: file.filename&#125;</span><br></pre></td></tr></table></figure><p>接口调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_uploadfile</span>():</span><br><span class="line">    url = <span class="string">&quot;http://127.0.0.1:8000/uploadfile&quot;</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test/cases/1.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        bin_data = f.read()</span><br><span class="line">    data: <span class="type">Dict</span>[<span class="built_in">str</span>, <span class="type">Any</span>] = &#123;</span><br><span class="line">        <span class="string">&#x27;file&#x27;</span>: <span class="built_in">open</span>(<span class="string">&#x27;test/cases/1.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>),</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">    r = requests.post(url=url, files=data, headers=header)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(r.content)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.content)</span><br></pre></td></tr></table></figure><h1 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h1><p>接口实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.post(<span class="params"><span class="string">&#x27;/uploadfile_by_body/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">def</span> <span class="title function_">create_file_from_body</span>(<span class="params">request: Request</span>):</span><br><span class="line">    data = <span class="keyword">await</span> request.body()</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;tmp&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(data)</span><br><span class="line">    <span class="keyword">return</span> &#123;<span class="string">&#x27;body&#x27;</span>: data&#125;</span><br></pre></td></tr></table></figure><p>接口调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">test_uploadfile_by_body</span>():</span><br><span class="line">    url = <span class="string">&quot;http://127.0.0.1:8000/uploadfile_by_body&quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;test/cases/1.txt&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        bin_data = f.read()</span><br><span class="line"></span><br><span class="line">    header = &#123;&#125; </span><br><span class="line"></span><br><span class="line">    r = requests.post(url=url, files=bin_data, headers=header)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> r.status_code == <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;success&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(r.content)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(r.content)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;基于Fastapi实现三种不同的文件上传接口&lt;/p&gt;
&lt;p&gt;第一种是基于Form将文件全部读取成byte传输到服务端，客户端请求需要包装报文。&lt;/p&gt;
&lt;p&gt;第二种是基于Form使用UploadFile类实现，调用时需要创建文件对象，不需要读取整个文件，服务端可以得到文件名</summary>
      
    
    
    
    <category term="笔记" scheme="http://af1ash.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="http" scheme="http://af1ash.github.io/tags/http/"/>
    
    <category term="fastapi" scheme="http://af1ash.github.io/tags/fastapi/"/>
    
  </entry>
  
  <entry>
    <title>应用部署</title>
    <link href="http://af1ash.github.io/2024/06/09/django_deploy/"/>
    <id>http://af1ash.github.io/2024/06/09/django_deploy/</id>
    <published>2024-06-09T03:28:22.045Z</published>
    <updated>2024-06-09T03:29:52.854Z</updated>
    
    <content type="html"><![CDATA[<h2 id="应用部署"><a href="#应用部署" class="headerlink" title="应用部署"></a>应用部署</h2><p>django + gunicorn + nginx</p><h3 id="动静分离"><a href="#动静分离" class="headerlink" title="动静分离"></a>动静分离</h3><p>数据接口与静态文件接口分离</p><h4 id="静态文件"><a href="#静态文件" class="headerlink" title="静态文件"></a>静态文件</h4><ol><li>debug模式下，开发服务器是可以正常使用</li><li>使用gunicorn提供静态文件接口+业务实现接口</li><li>动静分离：nginx提供静态文件服务，动态接口转发至gunicorn</li></ol><h4 id="Allow-hosts"><a href="#Allow-hosts" class="headerlink" title="Allow_hosts"></a>Allow_hosts</h4><p>配置服务访问IP</p><h4 id="gunicorn"><a href="#gunicorn" class="headerlink" title="gunicorn"></a>gunicorn</h4><p>配置</p><p>启动命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/pipeline_model</span><br><span class="line">$ EXTRACT_PROFILE=production ALLOWED_HOSTS=192.168.1.26 gunicorn --worker-class gevent main.wsgi:application  --log-file ../data/logs/gunicorn.log --<span class="built_in">bind</span> 192.168.1.26:8000  </span><br></pre></td></tr></table></figure><h4 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">upstream eighty &#123;</span><br><span class="line">    server pip_django:8000; <span class="comment"># 对外服务IP</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    <span class="comment"># include    conf/mime.types;</span></span><br><span class="line">    <span class="comment"># the port your site will be served on</span></span><br><span class="line">    listen      9116;</span><br><span class="line">    <span class="comment"># the domain name it will serve for</span></span><br><span class="line">    server_name 0.0.0.0;   <span class="comment"># substitute by your FQDN and machine&#x27;s IP address</span></span><br><span class="line">    charset     utf-8;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#Max upload size</span></span><br><span class="line">    client_max_body_size 75M;   <span class="comment"># adjust to taste</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Django media</span></span><br><span class="line">    location /media  &#123;</span><br><span class="line">        <span class="built_in">alias</span> /opt/apps/app;      <span class="comment"># your Django project&#x27;s media files</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /static &#123;</span><br><span class="line">        <span class="built_in">alias</span> /opt/apps/app/build/static;     <span class="comment"># your Django project&#x27;s static files</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># Finally, send all non-media requests to the Django server.</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://eighty;</span><br><span class="line">        proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header Referer <span class="variable">$http_referer</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">nginx_app:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">~/Workspace/finsense/pipeline_model/conf:/etc/nginx/conf.d</span>    <span class="comment"># 配置目录</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">~/Workspace/finsense/pipeline_model/:/opt/apps/pipeline_model/</span>    <span class="comment"># 静态文件目录</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">8001</span><span class="string">:8001</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">NGINX_PORT=8001</span></span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>特殊情况：drf提供了media文件，media文件作为静态文件通过nginx提供，但是返回原文链接中缺少了端口号</p><p>ip的问题，对外使用了127.0.0.1，修改后正常使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># base setting</span></span><br><span class="line">USE_X_FORWARDED_HOST = True</span><br><span class="line">SECURE_PROXY_SSL_HEADER = (<span class="string">&#x27;HTTP_X_FORWARDED_PROTO&#x27;</span>, <span class="string">&#x27;http&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># nginx config</span></span><br><span class="line">proxy_pass http://eighty;</span><br><span class="line">proxy_set_header X-Forwarded-Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">proxy_set_header Host <span class="variable">$http_host</span>;</span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">proxy_set_header X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">proxy_set_header Referer <span class="variable">$http_referer</span>; <span class="comment"># 解决跨域csrf</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="docker-volumes"><a href="#docker-volumes" class="headerlink" title="docker volumes"></a>docker volumes</h2><p>关闭服务并删除目录映射<br><strong>注意事项</strong>: 在关闭服务时，需要加上<code>-v</code>，原因是 提取服务与nginx服务间通过volume共享数据，如果不加<code>-v</code>选项，共享数据就会保留，会造成服务更新后共享数据不一致。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker-compose down -v </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;应用部署&quot;&gt;&lt;a href=&quot;#应用部署&quot; class=&quot;headerlink&quot; title=&quot;应用部署&quot;&gt;&lt;/a&gt;应用部署&lt;/h2&gt;&lt;p&gt;django + gunicorn + nginx&lt;/p&gt;
&lt;h3 id=&quot;动静分离&quot;&gt;&lt;a href=&quot;#动静分离&quot; cl</summary>
      
    
    
    
    <category term="笔记" scheme="http://af1ash.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="deploy" scheme="http://af1ash.github.io/tags/deploy/"/>
    
    <category term="django" scheme="http://af1ash.github.io/tags/django/"/>
    
  </entry>
  
</feed>
